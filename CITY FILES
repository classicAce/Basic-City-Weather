####### HTML #######
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Weather Dashboard</title>
</head>
<body>
    <div class="dashboard">
        <div class="header">
            <h1>World Weather Dashboard</h1>
            <label for="cityDropdown">Select City:</label>
    <select id="cityDropdown"></select>
        </div>
        <div class="weather-container" id="weather-container">
            <!-- Weather information goes here -->
           <div class="weather-card">
        <h2>City Name</h2>
  <p class="temperature">Temperature: 25째C</p>
   <p class="condition">Condition: Clear sky</p>
   <p class="datetime">Date & Time: 2023-04-06 15:45</p>
   <p class="coordinates">Coordinates: 40.7128째 N, -74.0060째 W</p>
    </div>

        </div>
    </div>
    <script src="script.js"></script>
</body>
</html>


########### CSS #############
body {
    margin: 100;
    padding: 10;
    font-family: 'Arial', sans-serif;
    background-size: cover;
    background-color: blue;
    background-position: center;
    background-repeat: no-repeat;
    background-attachment: fixed;
    transition: background 1s ease;
}

.dashboard {
    width: 80%;
    margin: auto;
    padding: 20px;
    background-color: rgba(255, 255, 255, 0.8); /* Semi-transparent white background */
    border-radius: 50px;
    margin-top: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.header {
    text-align: center;
    margin-bottom: 50px;
}

#cityDropdown {
    padding: 10px;
    font-size: 16px;
}

.weather-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-around;
}

.weather-card {
    width: 700px;
    margin: 15px;
    padding: 15px;
    background-color: #fff;
    border-radius: 10px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    text-align: center;
}

/* Add responsive styles as needed */

/* Make information bold and add more styling */
.weather-card h2 {
    font-weight: bold;
    margin-bottom: 10px;
}

.weather-card p {
    margin: 8px 0;
    font-weight: 500; /* Medium font weight */
}


#############JAVASCRIPT ###############
document.addEventListener('DOMContentLoaded', function () {
    const apiKey = 'your_actual_api_key_here';
    const cities = ['London', 'New York', 'Tokyo', 'Sydney', 'Paris'];

    const weatherContainer = document.getElementById('weather-container');
    const cityDropdown = document.getElementById('cityDropdown');

    // Populate the dropdown with cities
    cities.forEach(city => {
        const option = document.createElement('option');
        option.value = city;
        option.text = city;
        cityDropdown.add(option);
    });

    // Event listener for dropdown change
    cityDropdown.addEventListener('change', function () {
        const selectedCity = cityDropdown.value;
        fetchWeather(selectedCity);
    });

    function fetchWeather(city) {
        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=metric`;

        fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                displayWeather(data);
            })
            .catch(error => console.error('Error fetching weather data:', error));
    }

    function displayWeather(data) {
        // Clear previous weather cards
        weatherContainer.innerHTML = '';

        const weatherCard = document.createElement('div');
        weatherCard.className = 'weather-card';

        const cityHeader = document.createElement('h2');
        cityHeader.textContent = data.name;

        const temperature = document.createElement('p');
        temperature.textContent = `Temperature: ${data.main.temp}째C`;

        const weatherDescription = document.createElement('p');
        weatherDescription.textContent = `Condition: ${data.weather[0].description}`;

        const dateTime = document.createElement('p');
        const currentTime = new Date();
        dateTime.textContent = `Date & Time: ${currentTime.toLocaleString()}`;

        const coordinates = document.createElement('p');
        coordinates.textContent = `Coordinates: ${data.coord.lat}, ${data.coord.lon}`;

        weatherCard.appendChild(cityHeader);
        weatherCard.appendChild(temperature);
        weatherCard.appendChild(weatherDescription);
        weatherCard.appendChild(dateTime);
        weatherCard.appendChild(coordinates);

        weatherContainer.appendChild(weatherCard);
    }

    // Initial display for the first city in the dropdown
    fetchWeather(cities[0]);
});
